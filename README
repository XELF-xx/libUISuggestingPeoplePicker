libUISuggestingPeoplePicker is a library for iPhone development. You can include it in your own project to present a view using which your user can add multiple phones by editing with numberpad or picking them from contacts, just like the built-in SMS app in iPhone.
The project is published under 'New BSD License'.

User Guide (With XCode 4):

1 Setup

1.1 Refer UISuggestingPeoplePicker project in your project.
Click the menu item 'File' > 'Add Files To "(Your project name)"...'.
Select the file 'UISuggestingPeoplePicker.xcodeproj' (it has a blue icon) in the UISuggestingPeoplePicker project folder and click 'Add'.
Your project navigator would look like below:

+YourProject
 -UISuggestingPeoplePicker.xcodeproj
  +...
  -Products
   libUISuggestingPeoplePicker.a (the file name would be red)
 +...

Also, you sould see a new scheme for UISuggestingPeoplePicker in your project (just at the right of the 'Run' and 'Stop' buttons).

1.2 Link the header files and binary files of UISuggestingPeoplePicker to your project.
Click your project name in the project navigator to view your project settings.
Select tab 'All' under 'Build Settings'.
Add a value '-l UISuggestingPeoplePicker' to item 'Other Linker Flags' under section 'Linking'.
Add a value '/Users/foobar/Downloads/UISuggestingPeoplePicker/Headers' to item 'Header Search Paths' under section 'Search Paths'.
('/Users/foobar/Downloads/UISuggestingPeoplePicker' is the path where you put project folder of UISuggestingPeoplePicker into.)

1.3 Add required framework into your project.
UISuggestingPeoplePicker needs 6 frameworks to work:

UIKit.framework
Foundation.framework
CoreGraphics.framework
QuartzCore.framework
AddressBook.framework
AddressBookUI.framework

You should import them by clicking your project name in the project navigator and choosing 'Build Phases' > 'Link Binary With Libraries'.

1.4 Test if everything is ready.
Choose a scheme named 'UISuggestingPeoplePicker | iOS Device (or Simulator)' and click 'Run'. If built successfully, the red-named file 'libUISuggestingPeoplePicker.a' would become black.

2 Usage

Import UISuggestingPeoplePicker.h into your UIViewController.

> #import "UISuggestingPeoplePicker.h"

Create a instance of UISuggestingPeoplePicker in where you initialize the view (i.e. Inside method 'viewDidLoad'):

> UISuggestingPeoplePicker *picker = [[UISuggestingPeoplePicker alloc] initWithY:0.0f andHeight:175.0f byController:self];

If you want to decorate the cells containing suggested people with some UIView, you should define a class implementing the protocol SuggestedPersonDecorator:

> @interface YourDecorator : SuperClass <SuggestedPersonDecorator> {
>     ...
> }

> @implementation YourDecorator
> 
> - (UIView *)subviewToDecorate:(NSString *)phone {
>     if ([phone hasPrefix:@"+852"]) {
>         UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(200, 10, 50, 20)];
>         [label setText:@"HK"];
>         return label;
>     }
>     return nil;
> }
> 
> @end

And set the instace of it to the picker:

> [picker setSuggestedPersonDecorator:theDecorator];

Call the method 'display' of the instance of UISuggestingPeoplePicker in method 'viewWillAppear:' of your controller:

> [picker display];

Call the method 'fulfillSelected:' in where you want to check the phone numbers the user selected:

> NSMutableArray *selectedPhones = [NSMutableArray arrayWithCapacity:0];
> [picker fulfillSelected:selectedPhones];
> NSLog(@"Selected phones: %@", selectedPhones);

Call the method 'clear' in where you want to clear or dismiss the view:

> [picker clear];

That's all!
